{
	"provider": {
		"name": "spot",
		"schema": {
			"attributes": []
		}
	},
	"resources": [
		{
			"name": "cloudspace",
			"schema": {
				"attributes": [
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed",
							"description": "The id of the cloudspace.",
							"plan_modifiers": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
											}
										],
										"schema_definition": "stringplanmodifier.UseStateForUnknown()"
									}
								}
							]
						}
					},
					{
						"name": "last_updated",
						"string": {
							"computed_optional_required": "computed",
							"description": "The last time the cloudspace was updated."
						}
					},
					{
						"name": "resource_version",
						"string": {
							"computed_optional_required": "computed",
							"description": "The version of the resource known to local state. This is used to determine if the resource is modified outside of terraform."
						}
					},
					{
						"name": "cloudspace_name",
						"string": {
							"computed_optional_required": "required",
							"description": "The name of the cloudspace.",
							"plan_modifiers": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
											}
										],
										"schema_definition": "stringplanmodifier.RequiresReplace()"
									}
								}
							],
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.LengthBetween(1, 63)"
									}
								},
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											},
											{
												"path": "regexp"
											}
										],
										"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(`^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?$`), \"Must be a valid kubernetes name\")"
									}
								}
							]
						}
					},
					{
						"name": "hacontrol_plane",
						"bool": {
							"default": {
								"static": false
							},
							"computed_optional_required": "computed_optional",
							"description": "High Availability Kubernetes (replicated control plane for redundancy). This is a critical feature for production workloads."
						}
					},
					{
						"name": "region",
						"string": {
							"computed_optional_required": "required",
							"description": "The region where the cloudspace will be created.",
							"plan_modifiers": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
											}
										],
										"schema_definition": "stringplanmodifier.RequiresReplace()"
									}
								}
							]
						}
					},
					{
						"name": "preemption_webhook",
						"string": {
							"computed_optional_required": "optional",
							"description": "Webhook URL for preemption notifications.",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.LengthBetween(1, 255)"
									}
								},
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											},
											{
												"path": "regexp"
											}
										],
										"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(`^http(s)?://.+`), \"Must be a valid URL\")"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"name": "spotnodepool",
			"schema": {
				"attributes": [
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed",
							"description": "The id of the cloudspace.",
							"plan_modifiers": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
											}
										],
										"schema_definition": "stringplanmodifier.UseStateForUnknown()"
									}
								}
							]
						}
					},
					{
						"name": "last_updated",
						"string": {
							"computed_optional_required": "computed",
							"description": "The last time the spotnodepool was updated."
						}
					},
					{
						"name": "resource_version",
						"string": {
							"computed_optional_required": "computed",
							"description": "The version of the resource known to local state. This is used to determine if the resource is modified outside of terraform."
						}
					},
					{
						"name": "cloudspace_name",
						"string": {
							"computed_optional_required": "required",
							"description": "The name of the cloudspace.",
							"plan_modifiers": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
											}
										],
										"schema_definition": "stringplanmodifier.RequiresReplace()"
									}
								}
							],
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.LengthBetween(1, 63)"
									}
								},
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											},
											{
												"path": "regexp"
											}
										],
										"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(`^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?$`), \"Must be valid kubernetes name\")"
									}
								}
							]
						}
					},
					{
						"name": "server_class",
						"string": {
							"computed_optional_required": "required",
							"description": "The class of servers to use for the node pool.",
							"plan_modifiers": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
											}
										],
										"schema_definition": "stringplanmodifier.RequiresReplace()"
									}
								}
							]
						}
					},
					{
						"name": "desired_server_count",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "The desired number of servers in the node pool. Should be removed if autoscaling is enabled.",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
											}
										],
										"schema_definition": "int64validator.AtLeast(1)"
									}
								},
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
											},
											{
												"path": "github.com/hashicorp/terraform-plugin-framework/path"
											}
										],
										"schema_definition": "int64validator.ConflictsWith(path.MatchRelative().AtParent().AtName(\"autoscaling\"))"
									}
								}
							]
						}
					},
					{
						"name": "bid_price",
						"float64": {
							"computed_optional_required": "required",
							"description": "The bid price for the server in USD, rounded to three decimal places.",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/float64validator"
											}
										],
										"schema_definition": "float64validator.AtLeast(0.001)"
									}
								},
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/rackerlabs/terraform-provider-spot/internal/spotvalidator"
											}
										],
										"schema_definition": "spotvalidator.DecimalDigitsAtMost(3)"
									}
								}
							]
						}
					},
					{
						"name": "autoscaling",
						"single_nested": {
							"computed_optional_required": "optional",
							"attributes": [
								{
									"name": "max_nodes",
									"int64": {
										"computed_optional_required": "optional",
										"description": "The maximum number of nodes in the node pool.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.AtLeast(1)"
												}
											},
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.AtLeastSumOf(path.MatchRelative().AtParent().AtName(\"min_nodes\"))"
												}
											}
										]
									}
								},
								{
									"name": "min_nodes",
									"int64": {
										"computed_optional_required": "optional",
										"description": "The minimum number of nodes in the node pool.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.AtLeast(1)"
												}
											}
										]
									}
								}
							],
							"description": "Scales the nodes in a cluster based on usage. This block should be omitted to disable autoscaling.",
							"validators" :[
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/objectvalidator"
											}
										],
										"schema_definition": "objectvalidator.AlsoRequires(path.MatchRelative().AtName(\"max_nodes\"), path.MatchRelative().AtName(\"min_nodes\"))"
									}
								}
							]
						}
					}
				]
			}
		}
	],
	"version": "0.1"
}